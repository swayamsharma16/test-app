@property --rotate {
  syntax: "<angle>";
  initial-value: 132deg;
  inherits: false;
}

:root {
  --card-height: min(90vh, 600px);
  --card-width: min(90vw, 400px);
  --primary-color: #5ddcff;
  --secondary-color: #3c67e3;
  --tertiary-color: #4e00c2;
  --background-color: #212534;
  --card-background: #191c29;
  --text-color: rgb(88 199 250 / 100%);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  min-height: 100vh;
  background: var(--background-color);
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: Arial, sans-serif;
  padding: 1rem;
}

.card {
  background: var(--card-background);
  width: var(--card-width);
  height: var(--card-height);
  padding: 1rem;
  position: relative;
  border-radius: 10px;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  text-align: center;
  font-size: 1rem;
  color: var(--text-color);
  overflow: hidden;
}

.card::before,
.card::after {
  content: "";
  position: absolute;
  z-index: -1;
  border-radius: 10px;
  background-image: linear-gradient(var(--rotate),
      var(--primary-color),
      var(--secondary-color) 43%,
      var(--tertiary-color));
  animation: spin 2.5s linear infinite;
}

.card::before {
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  top: -2px;
  left: -2px;
}

.card::after {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  transform: scale(0.95);
  filter: blur(20px);
  opacity: 0.5;
}

@keyframes spin {
  0% {
    --rotate: 0deg;
  }

  100% {
    --rotate: 360deg;
  }
}

#app {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.timerContainer {
  font-size: 1.2rem;
  margin-bottom: 1rem;
}

.gameForm,
.gameContainer {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 100%;
}

input,
select,
button {

  width: 100%;
  padding: 0.75rem;
  font-size: 1.1rem;
  border: none;
  border-radius: 5px;
  background-color: rgba(255, 255, 255, 0.1);
  color: var(--text-color);
}

.score,
#playAgainBtn,
#timePerQuestion,
input {
  margin-top: 1rem;
}

button {
  cursor: pointer;
  background-color: var(--secondary-color);
  transition: background-color 0.3s;
}

button:hover {
  background-color: var(--tertiary-color);
}

.questionContainer {
  font-size: 1.2rem;
  margin-bottom: 1rem;
}

.answerContainer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.virtualKeypad {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 0.5rem;
  margin-top: 1rem;
}

.keypadBtn {
  padding: 0.5rem;
  font-size: 1.2rem;
}

.keypadBtn.delete,
.keypadBtn.submit {
  grid-column: span 3;
}

@media (max-width: 480px) {
  :root {
    --card-width: 95vw;
    --card-height: 95vh;
  }

  body {
    padding: 0.5rem;
  }

  .card {
    font-size: 0.9rem;
    padding: 0.75rem;
  }

  input,
  select,
  button {


    font-size: 1rem;
    padding: 0.6rem;
  }


}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}



/* Style for the submit button when it's disabled */
.submit:disabled {
  background-color: gray;
  color: white;
  cursor: not-allowed;
}